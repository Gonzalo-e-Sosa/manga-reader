---
import { getMangaRandomData } from "@/services/fetchData";
import FlagJA from "@/components/icons/Japan.astro";
import CoverArtImage from "./manga-cover-art.astro";
import { getCoverArtId } from "@/utils/getId";

const root = await getMangaRandomData();

const { result, response, data } = root;
const attributes = data.attributes;
const { title, description, tags } = attributes;

function isNotAvailable(val: undefined | string) {
  return !val || val.length === 0;
}
---

{
  result === "ok" ? (
    <article>
      <h2>{title.en}</h2>
      {attributes.altTitles &&
        attributes.altTitles[0] &&
        Object.keys(attributes.altTitles[0]).find((key) => key === "ja") && (
          <h3>{attributes.altTitles[0].ja}</h3>
        )}
      {description && description.en && <p>Description</p>}
      <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
        <div style="text-align: start">
          <span>{attributes.isLocked ? "Locked" : "Unlocked"}</span>
          <ul>
            {Array.isArray(attributes.links) &&
              attributes.links.map((link) => <li>{Object.values(link)}</li>)}
          </ul>
          <span>
            Original Language:{" "}
            {attributes.originalLanguage &&
            attributes.originalLanguage.includes("ja") ? (
              <FlagJA />
            ) : (
              attributes.originalLanguage
            )}
          </span>
          <span>
            Last Volume:{" "}
            {isNotAvailable(attributes.lastVolume)
              ? "Not available"
              : attributes.lastVolume}
          </span>
          <span>
            Last Chapter:{" "}
            {isNotAvailable(attributes.lastChapter)
              ? "Not available"
              : attributes.lastChapter}
          </span>
          <span>Status: {attributes.status}</span>
          <span>Year: {attributes.year ?? "Not available"}</span>
          <span>Content Rating: {attributes.contentRating}</span>
          <ul>
            {tags.map(({ attributes }) => (
              <li>{attributes.name.en}</li>
            ))}
          </ul>
          <time datetime={attributes.createdAt}>{attributes.createdAt}</time>
          <time datetime={attributes.updatedAt}>{attributes.updatedAt}</time>
        </div>
        <div>
          {data.relationships && (
            <CoverArtImage
              mangaId={data.id}
              coverArtId={getCoverArtId(data)}
              alt={attributes.title.en}
              width={300}
              height={300}
            />
          )}
        </div>
      </div>
    </article>
  ) : (
    <p>{response}</p>
  )
}

<style>
  article {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  ul {
    list-style: none;
  }
</style>
