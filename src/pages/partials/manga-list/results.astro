---
import type { MangaListOptions } from "@/services/types";
import Card from "@/components/manga/Card.astro";
import { createMangaService } from "@/modules/Manga/application/MangaService";
import { createFetchMangaRepository } from "@/modules/Manga/infrastructure/FetchMangaRepository";

export const partial = true;

const RESULTS_PER_PAGE = 10;

// Get url params
const page = Number(Astro.url.searchParams.get("page") ?? 1);
const limit = Number(Astro.url.searchParams.get("limit") ?? RESULTS_PER_PAGE);

const options: MangaListOptions = {
  offset: (page - 1) * 10,
  limit,
  contentRating: "safe",
};

const MangaRepository = createFetchMangaRepository();
const mangas = await createMangaService(MangaRepository).getAll(options);

let nextPage = `/partials/manga-list/results?page=${page + 1}`;

// Add options to url
Object.entries(options).forEach(([key, value]) => {
  nextPage += `&${key}=${value}`;
});
---

{
  Array.isArray(mangas) &&
    mangas.map((manga, index) => (
      <li class="self-center">
        <a href={`/manga/${manga.id}`} title={manga.title}>
          <Card
            title={manga.title}
            description={manga.description}
            mangaId={manga.id}
            coverArtFilename={manga.coverArtFileName}
            alt={manga.title + " cover art"}
            width={256}
            height={350}
            loading={index < RESULTS_PER_PAGE ? "eager" : "lazy"}
          />
        </a>
      </li>
    ))
}
<span
  class="htmx-indicator loading"
  hx-get={nextPage}
  hx-trigger="revealed"
  hx-target=".loading"
  hx-swap="outerHTML transition:true settle:500ms show:top scroll:true"
>
  <b>Loading...</b>
</span>
